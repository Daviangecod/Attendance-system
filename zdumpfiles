<?php
// Your existing code for form processing (validation, database insertion, etc.)

if ($_SERVER['REQUEST_METHOD'] !== "POST") {
    // Redirect to an appropriate error page (e.g., invalid request)
    header('Location: ../../signAdmin.php?error=invalidrequest');
    exit;
} else {
    // Process form data (name, email, password, role, etc.)

    // Assuming you have already inserted the user record into the database

    // Redirect based on the user's role
    if ($role === 'admin') {
        // Replace 'admin-dashboard.php' with your actual admin dashboard URL
        header('Location: admin-dashboard.php');
        exit;
    } elseif ($role === 'student') {
        // Replace 'student-dashboard.php' with your actual student dashboard URL
        header('Location: student-dashboard.php');
        exit;
    }
}
?>

<form action="action2.php" method="POST">

                     <div>
                            <?php
                                // if the get request query key "error"is set
                                
                                if(isset($_GET['error']) && isset($_GET['message'])):
                            
                            ?>

                            <?php
                                // if the error query key has value empty fields

                                if($_GET['error'] == "emptyfields"):
                            
                            ?>

                            <div>
                            
                            <?= $_GET['message']; ?>
                            </div>

                            <?php endif ?>

                            <?php endif ?>
                    </div>

                <h1 class="att">Create Account</h1>
                <div class="social-container">
                    <a href="#" class="social"><i class="fab fa-facebook-f"></i></a>
                    <a href="#" class="social"><i class="fab fa-google-plus-g"></i></a>
                    <a href="#" class="social"><i class="fab fa-linkedin-in"></i></a>
                </div>
                <span>Or use your email for registration</span>
                <input type="text" placeholder="Name" name="name">    
                <input type="email" placeholder="Email" name="email">    
                <input type="password" placeholder="Password" name="password"> 
                <button>Sign Up</button>   
        
    </form>
    </div>
    <?php
// Start the session
session_start();

// Assuming you have a database connection (you mentioned MySQL), and a 'user' table with columns 'username' and 'password'
require __DIR__."/../config/database.php";

// If the login form is submitted
if (isset($_POST['email']) && isset($_POST['password'])) {
    // Assign posted values to variables
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Check if the values exist in the database
    $query = "SELECT * FROM `user` WHERE email ='$email' AND password='$password'";
    $result = mysql_query($query) or die(mysql_error());
    $count = mysql_num_rows($result);

    // If the login credentials match, create a session for the user
    if ($count == 1) {
        $_SESSION['email'] = $email;
        header("location: dashboard.php"); // Redirect to the dashboard
        exit; // Important: Stop executing further code
    } else {
        // If the login credentials don't match, show an error message
        echo "Invalid Login Credentials.";
    }
}
?> -->
<?php
// Start the session
session_start();

// Assuming you have a database connection (you mentioned MySQL), and a 'signup' table with columns 'email' and 'password'
require __DIR__."/../config/database.php";

// If the login form is submitted
if (isset($_POST['username']) && isset($_POST['password'])) {
    // Assign posted values to variables
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Check if the values exist in the database
    $query = "SELECT * FROM signup WHERE email ='$username' AND password='$password'";

   

    // Check for connection errors
    if ($connection->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Execute the query
    $result = $connection->query($query);

    // Check if the query was successful
    if ($result) {
        $count = $result->num_rows;

        // If the login credentials match, create a session for the user
        if ($count == 1) {
            $_SESSION['username'] = $username;
            header("location: dashboard.php"); // Redirect to the dashboard
            exit; // Important: Stop executing further code
        } else {
            // If the login credentials don't match, show an error message
            echo "Invalid Login Credentials.";
        }
    } else {
        echo "Error executing query: " . $connection->error;
    }

  
}

$connection->close();

?>

<?php
require __DIR__."/../config/database.php"; // Adjust the path to your database configuration file

if ($_SERVER['REQUEST_METHOD'] !== "POST") {
    // Redirect if the request method is not POST
    header("Location: ../signupStudents.php?error=invalidrequest");
    exit();
} else {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Generate a unique salt (you can use a better method for generating salts)
    $salt = uniqid();

    // Hash the password with the salt
    $hashedPassword = password_hash($password . $salt, PASSWORD_BCRYPT);

    // Store the user data in the database
    $query = "INSERT INTO signup (username, email, password, salt) VALUES ('$username', '$email', '$hashedPassword', '$salt')";

    // Execute the query
    $result = mysqli_query($connection, $query);

    if ($result) {
        // Registration successful, redirect to the dashboard
        header("Location: dashboard.php?success=1");
        exit();
    } else {
        // If registration fails, handle the error (e.g., display an error message)
        echo "Registration failed. Please try again.";
    }
}

?>
<!-- code for sidebar and attendance for students -->
<header class="header">
                <div class="header-left">
                <div class="header-left">
                    <button class="menu-toggle">
                        <span class="menu-toggle-icon"><i class="fa fa-bars" aria-hidden="true"></i></span>
                        <span class="menu-toggle-text"></span>
                    </button>
                </div>

                </div>
                <div class="header-right">
                    <div class="profile">
                        <a href="pages/profile.php"><img src="escho.png" alt="Profile" class="profile-image"></a>
                        <span>Profile</span>
                    </div>
                </div>
                </header>
<div class="container">

<div class="sidebar">
    <div class="sidebar-header">
        <img src="escho.png" alt="Logo" class="logo">
    </div>
    <ul class="sidebar-menu">
        <li class="menu-item active">
            <a href="dashboard.php">
            <i class="fas fa-tachometer-alt"></i>
            <i class="fa-solid fa-user"></i>
                <span>Profile</span>
            </a>
        </li>
        <li class="menu-item">
            <a href="#">
            <i class="fa fa-users" aria-hidden="true"></i>
                <span>Attendance records</span>
            </a>
        </li>
        <li class="menu-item">
            <a href="subject/student.php">
            <i class="fa-solid fa-school"></i>
                <span>View courses</span>
            </a>
        </li>
        <li class="menu-item">
            <a href="pages/settings.html">
            <i class="fa fa-cog" aria-hidden="true"></i>
                <span>Settings</span>
            </a>
        </li>
    </ul>
</div>

        <!-- <main class="main-content">
            <h1>Student Attendance Dashboard</h1>
            
            <div class="form-container">
                <h2>Add Attendance Record</h2>
                <form id="attendanceForm" method="POST" action="tblAction.php">
                    <label for="studentName">Student Name:</label>
                    <input type="text" id="name" name="name" required placeholder="Enter student name">
                    <label for="date">Date:</label>
                    <input type="date" id="date" name="date" required>
                    
                    
                    <label for="attendance">Attendance:</label>
                    <select id="attendance" name="attendance" required>
                        <option value="Present">Present</option>
                        <option value="Absent">Absent</option>
                    </select>
                    
                    <button type="submit">Add Record</button>
                </form>
            </div>

            <div class="attendance-list">
                <h2>Attendance Records</h2>
                <table name="attendanceTable"id="attendanceTable">
                    <thead>
                        <tr>
                            <th>Student Name</th>
                            <th>Attendance</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php 
                        
                        $query= 'SELECT * FROM attends';
                        $result= mysqli_query($connection, $query);
                        ?>
                    <?php if(mysqli_num_rows($result)>0):?>
            <?php while($attends = mysqli_fetch_assoc($result)):?>
            <tr>
                <td id="name"> <?= $attends['name']?></td>
                <td id="attendance"> <?= $attends['attendance']?></td>
                <td id="attendance"> <?= $attends['date']?></td>
               
          </script>
          </td>


            </tr>
            <?php endwhile ?>
            <?php endif?>
                    </tbody>
                </table>
            </div>
        </main>
    </div> -->

<!-- css code for code above -->
 
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}



#date{
    width:100%;
}
/* Apply a dark theme */
.table {
    background-color: #333;
    color: #fff;
  }
  
  /* Alternating row colors */
  .table tr:nth-child(even) {
    background-color: #444;
  }
  
  /* Header styling */
  .table th {
    font-weight: bold;
    color: #ffcc00; /* Distinct header color */
  }
  
  /* Subtle shadows */
  .table {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* Hover effects */
  .table tr:hover {
    background-color: #555;
  }
  
  /* Icons for editing and deleting entries */
  .table .edit-icon::before {
    content: "\f044"; /* Font Awesome edit icon */
    margin-right: 5px;
  }
  
  .table .delete-icon::before {
    content: "\f1f8"; /* Font Awesome trash icon */
    margin-right: 5px;
  }
  
.container {
    display: flex; /* Use flexbox for layout */
}

.sidebar {
    background-color: #313847; /* A dark, modern color */
    color: #fff;
    width: 200px;
    padding: 20px;
    position: fixed;
    border-radius: 5px;
    top: 0;
    left: 0;
    height: 100%;
    transition: width 0.3s ease;
    z-index: 100; /* Ensure sidebar stays on top */
}

.sidebar li:hover {
    background-color: rgb(0, 33, 46);
}

.sidebar-header {
    text-align: center;
    padding-bottom: 20px;
}
 

.sidebar-header .logo {
    width: 80px;
}

.sidebar-menu {
    list-style: none;
    padding: 0;
}

.sidebar-menu .menu-item {
    margin-bottom: 15px;
}

.sidebar-menu .menu-item a {
    display: block;
    padding: 15px;
    color: #fff;
    text-decoration: none;
    transition: background-color 0.3s ease;
    border-radius: 5px;
}

.sidebar-menu .menu-item a i {
    margin-right: 10px;
}

.sidebar-menu .menu-item.active a {
    background-color: #333;
    color: #fff;
}
.main-content {
    flex-grow: 1; /* Allow main content to grow */
    padding: 20px;
    margin-left: 20%;
}

h1, h2 {
    text-align: center;
    color: #333;
}

.form-container {
    background: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(11, 3, 59, 0.1);
    margin-bottom: 20px;
}

label {
    display: block;
    margin-bottom: 10px;
}

input[type="text"], select {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
}
input[type="date"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

button {
    background-color: #dfad0a;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #218838; /* Darker green */
}

.attendance-list {
    background: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(13, 1, 60, 0.1);
}

table {
    width: 100%;
    border-collapse: collapse;
}

th, td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
}

th {
    background-color: #f2f2f2;
}
li a{
    color: rgb(36, 39, 51);
    font-size: 14px;
    text-decoration: none;
    margin: 15px 0;
}
